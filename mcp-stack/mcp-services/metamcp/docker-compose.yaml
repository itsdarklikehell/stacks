services:
  metamcp:
    image: "${IMAGE:-ghcr.io/metatool-ai/metamcp:latest}"
    container_name: "${NAME:-metamcp}"
    restart: "${RESTART:-unless-stopped}"

    build:
      context: ../DATA/metamcp
      args:
        UID: "${PUID:-1000}"
        GID: "${PGID:-1000}"
      # dockerfile: ./CustomDockerfile-metamcp-conda
      # dockerfile: ./CustomDockerfile-metamcp-uv
      # dockerfile: ./CustomDockerfile-metamcp-venv

    environment:
      # Postgres connection details
      POSTGRES_HOST: "${POSTGRES_HOST:-postgres}"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      POSTGRES_USER: "${POSTGRES_USER:-metamcp_user}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-m3t4mcp}"
      POSTGRES_DB: "${POSTGRES_DB:-metamcp_db}"

      # Database configuration (composed from above vars)
      DATABASE_URL: postgresql://${POSTGRES_USER:-metamcp_user}:${POSTGRES_PASSWORD:-m3t4mcp}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-metamcp_db}"

      # Application URL configuration
      APP_URL: "${APP_URL:-http://localhost:12008}"
      NEXT_PUBLIC_APP_URL: "${APP_URL:-http://localhost:12008}"

      # Auth configuration
      BETTER_AUTH_SECRET: "${BETTER_AUTH_SECRET:-your-super-secret-key-change-this-in-production}"

      # Docker networking fix
      TRANSFORM_LOCALHOST_TO_DOCKER_INTERNAL: "${TRANSFORM_LOCALHOST_TO_DOCKER_INTERNAL:-true}"

    extra_hosts:
      - "host.docker.internal:host-gateway"

    labels:
      - "autoheal-app=true"
      - "autoheal"
      - "com.centurylinklabs.watchtower.enable=true"

    # volumes:
    #   - "../DATA/metamcp/.env:/metamcp/.env"
    #   - "../DATA/metamcp/avatars:/app/avatars"
    #   - "../DATA/metamcp/avatars:/app/backgrounds"
    #   - "../DATA/metamcp/characters:/app/characters"
    #   - "../DATA/metamcp/chat_history:/app/chat_history"
    #   - "../DATA/metamcp/live2d-models:/app/live2d-models"
    #   - "../DATA/metamcp/logs:/app/logs"
    #   - "../DATA/metamcp/prompts/utils:/app/prompts/utils"
    #   - "../DATA/metamcp/scripts:/app/scripts"
    #   - "../DATA/metamcp/mcp_servers.json:/app/mcp_servers.json"
    #   - "../DATA/metamcp/model_dict.json:/app/model_dict.json"

    hostname: "${NAME:-metamcp}"

    # command: [ "ollama", "pull", "qwen3"]

    depends_on:
      metamcp-pg:
        condition: service_healthy

    networks:
      host:
      mcp-services:
      metamcp-network:

    ports:
      - "${PORT:-12008}:12008"

    env_file:
      - ../DATA/metamcp/.env
      # - ./metamcp/.env

    runtime: nvidia
    deploy:
      replicas: 1
      resources:
        # limits:
        #   memory: 1G
        #   cpus: "1.00"
        reservations:
          # memory: 512M
          # cpus: "0.50"
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, compute, video, graphics, utility]

    tty: true

    stdin_open: true

    # Optional: Health check for monitoring
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=3",
          "--spider",
          "http://localhost:12393/api/health",
        ]
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  metamcp-pg:
    image: postgres:16-alpine
    container_name: metamcp-pg
    restart: unless-stopped

    env_file:
      - ../DATA/metamcp/.env

    environment:
      POSTGRES_DB: "${POSTGRES_DB:-metamcp_db}"
      POSTGRES_USER: "${POSTGRES_USER:-metamcp_user}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-m3t4mcp}"

    ports:
      - "${POSTGRES_EXTERNAL_PORT:-9433}:5432"

    volumes:
      - metamcp-pg_data:/var/lib/postgresql/data

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-metamcp_user} -d ${POSTGRES_DB:-metamcp_db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

    networks:
      - metamcp-network

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
