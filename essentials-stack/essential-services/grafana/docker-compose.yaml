services:
  grafana:
    image: "${IMAGE:-grafana/grafana}"
    container_name: "${NAME:-grafana}"
    restart: "${RESTART:-unless-stopped}"

    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # - "autoheal-app=true"
      # - "autoheal"

    environment:
      - "GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS:-}"
      - "GF_FEATURE_TOGGLES_ENABLE=${GF_FEATURE_TOGGLES_ENABLE:-newNavigation}"
      - "GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS=${GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS:-true}"
      - "GF_SERVER_HTTP_PORT=${GF_SERVER_HTTP_PORT:-3000}"
      # - "GF_SECURITY_ADMIN_USER=${USERNAME:-admin}"
      # - "GF_SECURITY_ADMIN_PASSWORD=${PASSWORD:-admin}"
      # - "GF_AUTH_GOOGLE_CLIENT_SECRET=${GF_AUTH_GOOGLE_CLIENT_SECRET:-}"

    volumes:
      - "grafana_data:/var/lib/grafana"

    hostname: "${NAME:-grafana}"

    networks:
      host:
      essential-services:

    ports:
      - "${PORT:-3000}:3000"

    env_file:
      - "./grafana/.env"

    deploy:
      replicas: 1

    tty: true
    
    stdin_open: true

    # Optional: Health check for monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=3", "--spider", "http://localhost:3000/api/health"]
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
