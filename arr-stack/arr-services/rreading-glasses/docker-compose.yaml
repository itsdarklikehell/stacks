services:
  rreading-glasses:
    image: "${IMAGE:-blampe/rreading-glasses:hardcover}"
    container_name: "${NAME:-rreading-glasses}"
    restart: "${RESTART:-unless-stopped}"

    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # - "autoheal-app=true"
      # - "autoheal"

    environment:
      - "PUID=${PUID:-1000}"
      - "PGID=${PGID:-1000}"
      - "TZ=${TZ:-Europe/Amsterdam}"
      - "POSTGRES_HOST=rreading-glasses-db"
      - "POSTGRES_DATABASE=rreading-glasses"
      - "POSTGRES_USER=rreading-glasses"

    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"

    hostname: "${NAME:-rreading-glasses}"

    networks:
      host:
      arr-services:

    ports:
      - "${PORT:-8788}:8788"

    env_file:
      - "./rreading-glasses/.env"

    entrypoint: ["/main", "serve"]

    command: ["--verbose"]

    secrets:
      - "hardcover_auth"
      - "rreading_glasses_db_password"

    depends_on:
      rreading-glasses-db:
        condition: service_started

    deploy:
      replicas: 1

    tty: true
    
    stdin_open: true

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8788"]
      interval: "30s"
      timeout: "10s"
      retries: "3"
      start_period: "40s"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"



  rreading-glasses-db:
    image: postgres
    container_name: "${NAME:-rreading-glasses-db}"
    restart: "${RESTART:-unless-stopped}"

    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # - "autoheal-app=true"
      # - "autoheal"

    environment:
      - "PUID=${PUID:-1000}"
      - "PGID=${PGID:-1000}"
      - "TZ=${TZ:-Europe/Amsterdam}"
      - "POSTGRES_USER=rreading-glasses"
      - "POSTGRES_DB=rreading-glasses"

    volumes:
      - "rreading_glasses_data:/var/lib/postgresql/data"

    secrets:
      - "rreading_glasses_db_password"

    hostname: "${NAME:-rreading-glasses-db}"

    networks:
      host:
      arr-services:

    ports:
      - "${PORT:-5433}:5433"

    env_file:
      - "./rreading-glasses/.env"

    deploy:
      replicas: 1

    tty: true
    
    stdin_open: true

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8585"]
      interval: "30s"
      timeout: "10s"
      retries: "3"
      start_period: "40s"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"