services:
  riko-project:
    # image: "${IMAGE:-riko-project}"
    container_name: "${NAME:-riko-project}"
    restart: "${RESTART:-unless-stopped}"

    build:
      context: ../DATA/riko-project
      args:
        UID: "${PUID:-1000}"
        GID: "${PGID:-1000}"
      dockerfile: ./CustomDockerfile-riko-project-uv
      # dockerfile: ./CustomDockerfile-riko-project-conda
      # dockerfile: ./CustomDockerfile-riko-project-venv

    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk...}"

    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # - "autoheal-app=true"
      # - "autoheal"

    volumes:
      - "../DATA/riko-project/character_files:/riko-project/character_files"
      - "../DATA/riko-project/client:/riko-project/client"
      - "../DATA/riko-project/server:/riko-project/server"
      - "../DATA/riko-project/character_config.yaml:/riko-project/character_config.yaml"
    #   - "../DATA/riko-project/avatars:/app/backgrounds"
    #   - "../DATA/riko-project/characters:/app/characters"
    #   - "../DATA/riko-project/chat_history:/app/chat_history"
    #   - "../DATA/riko-project/live2d-models:/app/live2d-models"
    #   - "../DATA/riko-project/logs:/app/logs"
    #   - "../DATA/riko-project/prompts/utils:/app/prompts/utils"
    #   - "../DATA/riko-project/scripts:/app/scripts"
    #   - "../DATA/riko-project/mcp_servers.json:/app/mcp_servers.json"
    #   - "../DATA/riko-project/model_dict.json:/app/model_dict.json"

    hostname: "${NAME:-riko-project}"

    networks:
      host:
      riko-services:

    # ports:
    #   - "${PORT:-7272}:7272"

    env_file:
      - ./riko-project/.env

    runtime: nvidia
    deploy:
      replicas: 1
      resources:
        # limits:
        #   memory: 1G
        #   cpus: "1.00"
        reservations:
          # memory: 512M
          # cpus: "0.50"
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, compute, video, graphics, utility]

    # depends_on:
    #   - faster-whisper-gpu
    #   - wyoming-piper

    tty: true

    stdin_open: true

    # Optional: Health check for monitoring
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=3",
          "--spider",
          "http://localhost:12393/api/health",
        ]
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: "3"


    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
