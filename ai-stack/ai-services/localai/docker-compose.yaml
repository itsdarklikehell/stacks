services:
  localai:
    # image: ${IMAGE:-localai/localai:latest-gpu-nvidia-cuda-12}
    image: ${IMAGE:-localai/localai:latest-aio-gpu-nvidia-cuda-12}
    # image: ${IMAGE:-localai/localai:latest-aio-gpu-nvidia-cuda-11}
    # image: ${IMAGE:-localai/localai:latest}
    # image: ${IMAGE:-quay.io/go-skynet/local-ai:master}
    container_name: ${NAME:-localai}
    restart: ${RESTART:-unless-stopped}
    hostname: ${NAME:-localai}

    build:
      context: ../../DATA/ai-stack/localai
      dockerfile: Dockerfile
      args:
        # - IMAGE_TYPE=core
        - IMAGE_TYPE=aio
        - BASE_IMAGE=ubuntu:22.04
        - LOCALAI_ADDRESS=0.0.0.0:8081
        - LISTENING_ADDRESS=8081

    labels:
      - com.centurylinklabs.watchtower.enable=true
      # - autoheal-app
      # - autoheal-app=true

    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/Amsterdam}
      # - DEBUG=true
      - STORAGE_DIR=/app/server/storage
      - SERVER_PORT=${SERVER_PORT:-8081}
      - LOCALAI_ADDRESS=0.0.0.0:8081
      - LISTENING_ADDRESS=8081
      - PORT=${PORT:-8081}
      - MODELS_PATH=/models
      - THREADS=1
      # - PROFILE=gpu-8g

    cap_add:
      - SYS_NICE
      - NET_ADMIN
      - IPC_LOCK

    command:
      - phi-2
      - granite-embedding-107m-multilingual

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - localai_models:/models:cached
      # - ../../DATA/ai-stack/localai/models:/models:cached
      - localai_images:/tmp/generated/content/images/:cached
      # - ../../DATA/ai-stack/localai/images:/tmp/generated/content/images/:cached
      - localai_content:/tmp/generated/content:cached
      # - ../../DATA/ai-stack/localai/content:/tmp/generated/content:cached
      - localai_config:/configuration:cached
      # - ../../DATA/ai-stack/localai/configuration:/configuration:cached
      - localai_backends:/usr/share/localai/backends:cached
      # - ../../DATA/ai-stack/localai/backends:/usr/share/localai/backends:cached

    user: ${PUID:-1000}:${PGID:-1000}

    networks:
      host:
      ai-services:

    ports:
      - ${PORT:-8081}:8081

    env_file:
      - ./localai/.env

    runtime: nvidia
    deploy:
      replicas: 1
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, compute, video, graphics, utility]

    tty: true

    stdin_open: true

    healthcheck:
      test: [CMD, curl, -f, http://localhost:8081/readyz]
      interval: 1m
      timeout: 20m
      retries: 5

    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 3

  # localai-localrecall:
  #   image: quay.io/mudler/localrecall
  #   container_name: localai-localrecall
  #   restart: unless-stopped

  #   build:
  #     context: ../../DATA/ai-stack/localrecall
  #     dockerfile: Dockerfile

  #   ports:
  #     - 8087:8087

  #   env_file:
  #     - ./localai/.env

  #   environment:
  #     - COLLECTION_DB_PATH=/db
  #     - EMBEDDING_MODEL=granite-embedding-107m-multilingual
  #     - FILE_ASSETS=/assets
  #     - OPENAI_API_KEY=sk-1234567890
  #     - OPENAI_BASE_URL=http://localai-localai:8087
  #     - LISTENING_ADDRESS=8087
  #     - FILE_ASSETS=/assets

  #   volumes:
  #     - ../../DATA/ai-stack/localrecall/volumes/db:/db
  #     - ../../DATA/ai-stack/localrecall/volumes/assets/:/assets

  # localai-localagi:
  #   container_name: localai-localagi
  #   restart: unless-stopped
  #   image: quay.io/mudler/localagi:master

  #   depends_on:
  #     localai-localai:
  #       condition: service_healthy

  #     # localrecall-healthcheck:
  #     #   condition: service_completed_successfully

  #     # localai-dind:
  #     #   condition: service_healthy

  #   build:
  #     context: ../../DATA/ai-stack/localagi
  #     dockerfile: Dockerfile.webui

  #   ports:
  #     - 8088:8088

  #   environment:
  #     - LOCALAGI_MODEL=${MODEL_NAME:-gemma-3-4b-it-qat}
  #     - LOCALAGI_MULTIMODAL_MODEL=${MULTIMODAL_MODEL:-moondream2-20250414}
  #     - LOCALAGI_IMAGE_MODEL=${IMAGE_MODEL:-sd-1.5-ggml}
  #     - LOCALAGI_LLM_API_URL=http://localai-localagi:8088
  #     #- LOCALAGI_LLM_API_KEY=sk-1234567890
  #     - LOCALAGI_LOCALRAG_URL=http://localai-localrecall:8088
  #     - LOCALAGI_STATE_DIR=/pool
  #     - LOCALAGI_TIMEOUT=5m
  #     - LOCALAGI_ENABLE_CONVERSATIONS_LOGGING=false
  #     - LOCALAGI_SSHBOX_URL=root:root@sshbox:2222
  #     - DOCKER_HOST=tcp://localai-dind:2358

  #   extra_hosts:
  #     - host.docker.internal:host-gateway

  #   volumes:
  #     - ../../DATA/ai-stack/localagi/volumes:/pool

  # localrecall-healthcheck:
  #   image: busybox
  #   restart: unless-stopped
  #   container_name: localrecall-healthcheck

  #   depends_on:
  #     localai-localrecall:
  #       condition: service_started

  #   command:
  #     [
  #       sh,
  #       -c,
  #       until wget -q -O - http://localai-localrecall:8087 > /dev/null 2>&1; do echo 'Waiting for localrecall...'; sleep 1; done; echo 'localrecall is up!',
  #     ]

  # localai-dind:
  #   image: docker:dind
  #   container_name: localai-dind
  #   restart: unless-stopped

  #   privileged: true

  #   environment:
  #     - DOCKER_TLS_CERTDIR=

  #   ports:
  #     - 2358:2358

  #   healthcheck:
  #     test: [CMD, docker, info]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  # localai-sshbox:
  #   container_name: localai-sshbox
  #   restart: unless-stopped

  #   build:
  #     context: ../../DATA/ai-stack/localagi
  #     dockerfile: Dockerfile.sshbox

  #   ports:
  #     - 2222:2222

  #   environment:
  #     - SSH_USER=root
  #     - SSH_PASSWORD=root
  #     - DOCKER_HOST=tcp://localai-dind:2358

  #   depends_on:
  #     localai-dind:
  #       condition: service_healthy
