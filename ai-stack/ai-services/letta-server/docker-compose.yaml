services:
  letta_db:
    image: ankane/pgvector:v0.5.1
    networks:
      host:
      default:
        aliases:
          - pgvector_db
          - letta-db
    environment:
      - POSTGRES_USER=${LETTA_PG_USER:-letta}
      - POSTGRES_PASSWORD=${LETTA_PG_PASSWORD:-letta}
      - POSTGRES_DB=${LETTA_PG_DB:-letta}
    volumes:
      - ../DATA/letta/.persist/pgdata-test:/var/lib/postgresql/data
      - ../DATA/letta/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  
  letta-server:
    image: ${IMAGE:-letta/letta}
    container_name: ${NAME:-letta-server}
    restart: ${RESTART:-unless-stopped}

    build:
      context: ../DATA/letta
      args:
        UID: ${PUID:-1000}
        GID: ${PGID:-1000}
        INSTALL_ORIGINAL_WHISPER: false
        INSTALL_BARK: false
      dockerfile: ./Dockerfile
      
    labels:
      - "autoheal-app=true"
      - "autoheal"
      - "com.centurylinklabs.watchtower.enable=true"

    environment:
      - LETTA_PG_URI=${LETTA_PG_URI:-postgresql://${LETTA_PG_USER:-letta}:${LETTA_PG_PASSWORD:-letta}@${LETTA_DB_HOST:-letta-db}:${LETTA_PG_PORT:-5432}/${LETTA_PG_DB:-letta}}
      - LETTA_DEBUG=${LETTA_DEBUG:-True}
      - SKIP_INIT_DB=${SKIP_INIT_DB:-True}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-}
      - AZURE_API_KEY=${AZURE_API_KEY:-}
      - AZURE_BASE_URL=${AZURE_BASE_URL:-}
      - AZURE_API_VERSION=${AZURE_API_VERSION:-}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - VLLM_API_BASE=${VLLM_API_BASE:-}
      - OPENLLM_AUTH_TYPE=${OPENLLM_AUTH_TYPE:-}
      - OPENLLM_API_KEY=${OPENLLM_API_KEY:-}
      - LETTA_OTEL_EXPORTER_OTLP_ENDPOINT=${LETTA_OTEL_EXPORTER_OTLP_ENDPOINT}
      - CLICKHOUSE_ENDPOINT=${CLICKHOUSE_ENDPOINT:-}
      - CLICKHOUSE_DATABASE=${CLICKHOUSE_DATABASE:-}
      - CLICKHOUSE_USERNAME=${CLICKHOUSE_USERNAME:-}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}

    volumes:
      - ../DATA/letta/.persist/pgdata:/var/lib/postgresql/data
      - ../DATA/letta/tool_execution_dir:/root/.letta/tool_execution_dir # mounted volume for tool execution
  
      # - ../DATA/letta/configs/server_config.yaml:/root/.letta/config # config file
      # - ../DATA/letta/credentials:/root/.letta/credentials # credentials file
      # Uncomment this line to mount a local directory for tool execution, and specify the mount path
      # before running docker compose: `export LETTA_SANDBOX_MOUNT_PATH=$PWD/directory`


    hostname: ${NAME:-letta-server}

    # command: ["--logpath", "/var/log/mongodb/mongod.log"]

    networks:
      host:
      ai-services:
        aliases:
          - pgvector_db
          - letta-db

    ports:
      - "8283:8283"
      - "8083:8083"

    env_file:
      - ./letta-server/.env

    deploy:
      replicas: 1

    # depends_on:
    #   letta-db:
    #     condition: service_healthy

    tty: true
    
    stdin_open: true

    # Optional: Health check for monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8283/api/health"]
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"