services:
  swarmui:
    # image: ${IMAGE:-swarmui}
    container_name: ${NAME:-swarmui}
    restart: ${RESTART:-unless-stopped}

    user: ${PUID:-1000}:${PGID:-1000}
    
    build:
      context: ../DATA/SwarmUI
      args:
        UID: ${PUID:-1000}
        GID: ${PGID:-1000}
      dockerfile: ./launchtools/CustomDockerfile.docker

    labels:
      - autoheal-app=true
      - autoheal
      - "com.centurylinklabs.watchtower.enable=true"

    volumes:
      - swarmdata:/SwarmUI/Data
      - swarmbackend:/SwarmUI/dlbackend
      - swarmdlnodes:/SwarmUI/src/BuiltinExtensions/ComfyUIBackend/DLNodes
      - swarmextensions:/SwarmUI/src/Extensions
      - ../DATA/stable-diffusion-webui-docker/data/Models:/SwarmUI/Models
      - ../DATA/stable-diffusion-webui-docker/output:/SwarmUI/Output
      - ../DATA/SwarmUI/src/BuiltinExtensions/ComfyUIBackend/CustomWorkflows:/SwarmUI/src/BuiltinExtensions/ComfyUIBackend/CustomWorkflows

    hostname: ${NAME:-swarmui}

    networks:
      host:
      ai-services:

    ports:
      - ${PORT:-7801}:7801

    env_file:
      - ./swarmui/.env

    cap_drop:
      - ALL

    # build:
    #   context: ../SwarmUI
    #   args:
    #     UID: ${PUID:-1000}
    #   dockerfile: launchtools/CustomDockerfile.docker
    # uncomment `network_mode: host` if you want to access other services on the host network (eg a separated comfy instance)
    # network_mode: host

    runtime: nvidia
    deploy:
      replicas: 1
      resources:
        # limits:
        #   memory: 1G
        #   cpus: "1.00"
        reservations:
          # memory: 512M
          # cpus: "0.50"
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, compute, video, graphics, utility]

    tty: true
    
    stdin_open: true

    # Optional: Health check for monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7801/api/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3