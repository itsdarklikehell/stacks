services:
  letta-server:
    image: letta/letta:latest
    container_name: letta-server
    restart: unless-stopped
    
    labels:
      - autoheal-app=true
      - keep_healthy
      - "com.centurylinklabs.watchtower.enable=true"
    
    environment:
      - LETTA_PG_URI=${LETTA_PG_URI:-postgresql://${LETTA_PG_USER:-letta}:${LETTA_PG_PASSWORD:-letta}@${LETTA_DB_HOST:-letta-db}:${LETTA_PG_PORT:-5432}/${LETTA_PG_DB:-letta}}
      - LETTA_DEBUG=${LETTA_DEBUG:-True}
      - SKIP_INIT_DB=${SKIP_INIT_DB:-True}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_BASE_URL=${AZURE_BASE_URL}
      - AZURE_API_VERSION=${AZURE_API_VERSION}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - VLLM_API_BASE=${VLLM_API_BASE}
      - OPENLLM_AUTH_TYPE=${OPENLLM_AUTH_TYPE}
      - OPENLLM_API_KEY=${OPENLLM_API_KEY}
      - LETTA_OTEL_EXPORTER_OTLP_ENDPOINT=${LETTA_OTEL_EXPORTER_OTLP_ENDPOINT}
      - CLICKHOUSE_ENDPOINT=${CLICKHOUSE_ENDPOINT}
      - CLICKHOUSE_DATABASE=${CLICKHOUSE_DATABASE}
      - CLICKHOUSE_USERNAME=${CLICKHOUSE_USERNAME}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}

    volumes:
      # - ../DATA/letta/configs/server_config.yaml:/root/.letta/config # config file
      # - ../DATA/letta/credentials:/root/.letta/credentials # credentials file
      # Uncomment this line to mount a local directory for tool execution, and specify the mount path
      # before running docker compose: `export LETTA_SANDBOX_MOUNT_PATH=$PWD/directory`
      - ../DATA/letta/tool_execution_dir:/root/.letta/tool_execution_dir # mounted volume for tool execution


    hostname: letta-server

    # command: ["--logpath", "/var/log/mongodb/mongod.log"]

    networks:
      ai-services:
      host:
      default:
        aliases:
          - pgvector_db
          - letta-db

    ports:
      - 8283:8283
      - 8083:8083

    env_file:
      - .env.letta-server
      
    deploy:
      replicas: 1

    depends_on:
      letta-db:
        condition: service_healthy



