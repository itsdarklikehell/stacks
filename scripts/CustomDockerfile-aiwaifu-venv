# Base image
FROM python:3.9.24-slim-trixie AS build


# Set noninteractive mode for apt
ENV DEBIAN_FRONTEND=noninteractive

# Update and install dependencies
RUN apt-get update 
RUN apt-get install -y --no-install-suggests --no-install-recommends \
    build-essential \
    git \
    wget \
    curl \
    ca-certificates \
    ffmpeg \
    git \
    bzip2 \
    python3 \
    python3-venv 
# libxcb-xfixes0 \
# libxcb-shape0 \
# libsm6 \
# libxext6 \
RUN apt --fix-broken install -y
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# # Install miniconda
# ENV CONDA_DIR=/opt/conda
# RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
#     /bin/bash ~/miniconda.sh -b -p /opt/conda
# # Put conda in path so we can use conda activate
# ENV PATH=$CONDA_DIR/bin:$PATH
# # Accept TOS
# RUN conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && \
#     conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r

RUN python3 -m venv /venv && \
    # isolate python packages to single location so we can easily copy if we want to take this multi stage
    /venv/bin/pip install --disable-pip-version-check --upgrade pip setuptools wheel

# Build virtualenv in a separate step so it gets cached and only re-executes when the requirements change
FROM build AS build-venv

# Copy data
COPY requirements.txt /requirements.txt
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install --upgrade setuptools
RUN python3 -m pip install --upgrade wheel
RUN python3 -m pip install gevent==23.7.0

RUN /venv/bin/pip install --disable-pip-version-check -r /requirements.txt
RUN /venv/bin/pip cache purge

# COPY requirements.no_deps.txt /requirements.no_deps.txt
# RUN /venv/bin/pip install --disable-pip-version-check -r /requirements.no_deps.txt
# RUN /venv/bin/pip cache purge

FROM gcr.io/distroless/python3-debian12
COPY --from=build-venv /venv /venv
# Copy data
COPY . /aiwaifu
WORKDIR /aiwaifu

# python3-debian12 uses python3.11 so we point the dest /usr/bin/python3 to our python binary 
# causes issues with python's site packages otherwise.
COPY --from=build /usr/bin/python3 /usr/bin/python3
COPY --from=build /usr/lib/python3 /usr/lib/python3
# RUN ln -sf /usr/bin/python3 /usr/bin/python3

# RUN python3 main.py --help

# Expose port 7272 (the new default port)
EXPOSE 7272

CMD ["/env/bin/python3", "main.py --config=example"]
