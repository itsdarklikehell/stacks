# Base image
FROM nvidia/cuda:13.0.1-cudnn-devel-ubuntu24.04 AS base

# Update and install dependencies
RUN apt-get update && \
    apt-get install -y libxcb-xfixes0 libxcb-shape0 ffmpeg pipx git wget curl ca-certificates python3 python3-pip python3-venv ffmpeg git bzip2 && \
    apt --fix-broken install -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install miniconda
ENV CONDA_DIR=/opt/conda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda
# Put conda in path so we can use conda activate
ENV PATH=$CONDA_DIR/bin:$PATH
# Accept TOS
RUN conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r



# Copy data
COPY . /riko-project
WORKDIR /riko-project


# Create .venv
ENV PATH=".venv/bin:$PATH"
RUN conda create -n riko-project python=3.10 pip=24.0 -y && \
    conda init

# Make RUN commands use the new environment:
SHELL ["conda", "run", "-n", ".venv", "/bin/bash", "-c"]

# Install requirements
RUN pip install --upgrade pip uv nltk && \
    uv pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128 && \
    uv pip install -r extra-req.txt --no-deps && \
    uv pip install -r requirements.txt

# RUN install_reqs.sh

# RUN python3 main_chat.py

# # Expose port 7272 (the new default port)
# EXPOSE 7272

# The code to run when container is started:
ENTRYPOINT ["python3", "./server/main_chat.py"]
# CMD ["python3", "./server/main_chat.py"]