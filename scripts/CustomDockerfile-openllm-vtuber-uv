# Base image
FROM nvidia/cuda:13.0.1-cudnn-devel-ubuntu24.04 AS base

# Set noninteractive mode for apt
ENV DEBIAN_FRONTEND=noninteractive

# Update and install dependencies
RUN apt-get  -o Acquire::AllowInsecureRepositories=true update
RUN apt-get install -y libxcb-xfixes0 libxcb-shape0 || true
RUN apt-get install -y --no-install-recommends \
    ffmpeg python3 python3-venv

RUN apt --fix-broken install -y
RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/*

# Install pip
RUN curl https://bootstrap.pypa.io/get-pip.py | python3 -
RUN pip install --root-user-action=ignore --no-cache-dir -r /tmp/requirements.txt
RUN pip install --root-user-action=ignore --no-cache-dir funasr modelscope huggingface_hub pywhispercpp torch torchaudio edge-tts azure-cognitiveservices-speech py3-tts
RUN pip install --root-user-action=ignore --no-cache-dir uv

# Copy application code to the container
COPY . /app
# Set working directory
WORKDIR /app

# Ensure the installed uv binary is on the `PATH`
ENV PATH="/root/.local/bin/:$PATH"

RUN uv sync
RUN uv venv
# Enable venv
ENV PATH=".venv/bin:$PATH"

# MeloTTS installation
WORKDIR /opt/MeloTTS
RUN git clone https://github.com/myshell-ai/MeloTTS.git /opt/MeloTTS && \
    pip install --root-user-action=ignore --no-cache-dir -e . && \
    python3 -m unidic download && \
    python3 melo/init_downloads.py

# Whisper variant
FROM base AS whisper
ARG INSTALL_ORIGINAL_WHISPER=false
RUN if [ "$INSTALL_WHISPER" = "true" ]; then \
        pip install openai-whisper; \
    fi

# Bark variant
FROM whisper AS bark
ARG INSTALL_BARK=false
RUN if [ "$INSTALL_BARK" = "true" ]; then \
        pip install git+https://github.com/suno-ai/bark.git; \
    fi

# Final image
FROM bark AS final

# Copy application code to the container
COPY . /app
# Set working directory
WORKDIR /app


# Expose port 12393 (the new default port)
EXPOSE 12393

# CMD ["python3", "server.py"]
CMD ["uv", "run", "server.py"]