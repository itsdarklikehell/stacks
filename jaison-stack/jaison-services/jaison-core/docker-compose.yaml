services:
  jaison-core:
    # image: "${IMAGE:-jaison-core}"
    container_name: "${NAME:-jaison-core}"
    restart: "${RESTART:-unless-stopped}"

    build:
      context: "../../DATA/jaison-stack/jaison-core"
      args:
        UID: "${PUID:-1000}"
        GID: "${PGID:-1000}"
      dockerfile: "./CustomDockerfile-jaison-core-conda"
      # dockerfile: "./CustomDockerfile-jaison-core-uv"
      # dockerfile: "./CustomDockerfile-jaison-core-venv"

    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # - "autoheal-app"
      # - "autoheal-app=true"

    environment:
      - "PUID=${PUID:-1000}"
      - "PGID=${PGID:-1000}"
      - "TZ=${TZ:-Europe/Amsterdam}"
      - "OPENAI_API_KEY=${OPENAI_API_KEY:-sk...}"

    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    #   - "../../DATA/arr-stack/jaison-core/.env:/jaison-core/.env"
    #   - "../../DATA/arr-stack/jaison-core/avatars:/app/avatars"
    #   - "../../DATA/arr-stack/jaison-core/avatars:/app/backgrounds"
    #   - "../../DATA/arr-stack/jaison-core/characters:/app/characters"
    #   - "../../DATA/arr-stack/jaison-core/chat_history:/app/chat_history"
    #   - "../../DATA/arr-stack/jaison-core/live2d-models:/app/live2d-models"
    #   - "../../DATA/arr-stack/jaison-core/logs:/app/logs"
    #   - "../../DATA/arr-stack/jaison-core/prompts/utils:/app/prompts/utils"
    #   - "../../DATA/arr-stack/jaison-core/scripts:/app/scripts"
    #   - "../../DATA/arr-stack/jaison-core/mcp_servers.json:/app/mcp_servers.json"
    #   - "../../DATA/arr-stack/jaison-core/model_dict.json:/app/model_dict.json"

    hostname: "${NAME:-jaison-core}"

    networks:
      host:
      jaison-services:

    ports:
      - "${PORT:-7272}:7272"

    env_file:
      - "./jaison-core/.env"

    runtime: nvidia
    deploy:
      replicas: 1
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: ["gpu", "compute", "video", "graphics", "utility"]

    tty: true

    stdin_open: true

    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "wget",
    #       "--no-verbose",
    #       "--tries=3",
    #       "--spider",
    #       "http://localhost:12393/api/health",
    #     ]
    #   interval: "30s"
    #   timeout: "10s"
    #   start_period: "30s"
    #   retries: "3"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
